#
#   sqlite-windows-default.nmake -- Makefile to build SQLite Library for windows
#

PRODUCT         = sqlite
VERSION         = 1.0.0
BUILD_NUMBER    = 0
PROFILE         = default
PA              = $(PROCESSOR_ARCHITECTURE)

!IF "$(PA)" == "AMD64"
ARCH            = x64
ENTRY           = _DllMainCRTStartup
!ELSE
ARCH            = x86
ENTRY           = _DllMainCRTStartup@12
!ENDIF

OS              = windows
CONFIG          = $(OS)-$(ARCH)-$(PROFILE)
LBIN            = $(CONFIG)\bin
CC              = cl
LD              = link
RC              = rc
CFLAGS          = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS          = -D_REENTRANT -D_MT -DBIT_FEATURE_SQLITE=1 -DBIT_DEBUG
IFLAGS          = -I$(CONFIG)\inc
LDFLAGS         = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS        = -libpath:$(CONFIG)\bin
LIBS            = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_ROOT_PREFIX       = /
BIT_BASE_PREFIX       = $(BIT_ROOT_PREFIX)usr/local
BIT_DATA_PREFIX       = $(BIT_ROOT_PREFIX)
BIT_STATE_PREFIX      = $(BIT_ROOT_PREFIX)var
BIT_APP_PREFIX        = $(BIT_BASE_PREFIX)/lib/$(PRODUCT)
BIT_VAPP_PREFIX       = $(BIT_PRODUCT_PREFIX)/$(VERSION)
BIT_BIN_PREFIX        = $(BIT_ROOT_PREFIX)usr/local/bin
BIT_INC_PREFIX        = $(BIT_ROOT_PREFIX)usr/local/include
BIT_LIB_PREFIX        = $(BIT_ROOT_PREFIX)usr/local/lib
BIT_MAN_PREFIX        = $(BIT_ROOT_PREFIX)usr/local/share/man
BIT_SBIN_PREFIX       = $(BIT_ROOT_PREFIX)usr/local/sbin
BIT_ETC_PREFIX        = $(BIT_ROOT_PREFIX)etc/$(PRODUCT)
BIT_WEB_PREFIX        = $(BIT_ROOT_PREFIX)var/www/$(PRODUCT)-default
BIT_LOG_PREFIX        = $(BIT_ROOT_PREFIX)var/log/$(PRODUCT)
BIT_SPOOL_PREFIX      = $(BIT_ROOT_PREFIX)var/spool/$(PRODUCT)
BIT_CACHE_PREFIX      = $(BIT_ROOT_PREFIX)var/cache/$(PRODUCT)
BIT_SRC_PREFIX        = $(BIT_ROOT_PREFIX)usr/local/src/$(PRODUCT)-$(VERSION)

all compile: prep \
        $(CONFIG)\bin\libsqlite3.dll

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_PRODUCT_PREFIX)" == ""
	echo "BIT_PRODUCT_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\sqlite-windows-default-bit.h $(CONFIG)\inc\bit.h
clean:
	-if exist $(CONFIG)\bin\libsqlite3.dll del /Q $(CONFIG)\bin\libsqlite3.dll
	-if exist $(CONFIG)\obj\sqlite.obj del /Q $(CONFIG)\obj\sqlite.obj
	-if exist $(CONFIG)\obj\sqlite3.obj del /Q $(CONFIG)\obj\sqlite3.obj

$(CONFIG)\inc\sqlite3.h: 
	-if exist $(CONFIG)\inc\sqlite3.h del /Q $(CONFIG)\inc\sqlite3.h
	copy /Y src\sqlite3.h $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite.obj: \
    src\sqlite.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\sqlite3.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite.obj -Fd$(CONFIG)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sqlite.c

$(CONFIG)\obj\sqlite3.obj: \
    src\sqlite3.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\sqlite3.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite3.obj -Fd$(CONFIG)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sqlite3.c

$(CONFIG)\bin\libsqlite3.dll: \
    $(CONFIG)\inc\sqlite3.h \
    $(CONFIG)\obj\sqlite.obj \
    $(CONFIG)\obj\sqlite3.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libsqlite3.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\sqlite.obj $(CONFIG)\obj\sqlite3.obj $(LIBS)

version: 
	@echo 1.0.0-0

