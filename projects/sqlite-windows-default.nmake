#
#   sqlite-windows-default.nmake -- Makefile to build SQLite Library for windows
#

PRODUCT            = sqlite
VERSION            = 1.0.1
PROFILE            = default
PA                 = $(PROCESSOR_ARCHITECTURE)

!IF "$(PA)" == "AMD64"
ARCH               = x64
ENTRY              = _DllMainCRTStartup
!ELSE
ARCH               = x86
ENTRY              = _DllMainCRTStartup@12
!ENDIF

OS                 = windows
CONFIG             = $(OS)-$(ARCH)-$(PROFILE)
LBIN               = $(CONFIG)\bin


!IF "$(BIT_PACK_LIB)" == "1"
BIT_PACK_COMPILER = 1
!ENDIF

!IF "$(BIT_PACK_RC)" == "1"
BIT_PACK_WINSDK = 1
!ENDIF


BIT_PACK_COMPILER_PATH    = cl
BIT_PACK_LIB_PATH         = lib.exe
BIT_PACK_LINK_PATH        = link
BIT_PACK_RC_PATH          = rc
BIT_PACK_WINSDK_PATH      = winsdk

CC                 = cl
LD                 = link
RC                 = rc
CFLAGS             = -nologo -GR- -W3 -O2 -MD
DFLAGS             = -D_REENTRANT -D_MT 
IFLAGS             = -I$(CONFIG)\inc
LDFLAGS            = -nologo -nodefaultlib -incremental:no -machine:$(ARCH)
LIBPATHS           = "-libpath:$(CONFIG)\bin"
LIBS               = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_ROOT_PREFIX    = C:
BIT_BASE_PREFIX    = $(BIT_ROOT_PREFIX)\Program Files
BIT_APP_PREFIX     = $(BIT_BASE_PREFIX)\SQLite Library
BIT_VAPP_PREFIX    = $(BIT_APP_PREFIX)
BIT_DATA_PREFIX    = $(BIT_VAPP_PREFIX)
BIT_STATE_PREFIX   = $(BIT_VAPP_PREFIX)
BIT_BIN_PREFIX     = $(BIT_VAPP_PREFIX)\bin
BIT_INC_PREFIX     = $(BIT_VAPP_PREFIX)\inc
BIT_LIB_PREFIX     = $(BIT_VAPP_PREFIX)\lib
BIT_MAN_PREFIX     = $(BIT_VAPP_PREFIX)\man
BIT_ETC_PREFIX     = $(BIT_VAPP_PREFIX)
BIT_WEB_PREFIX     = $(BIT_VAPP_PREFIX)\web
BIT_LOG_PREFIX     = $(BIT_VAPP_PREFIX)\log
BIT_SPOOL_PREFIX   = $(BIT_VAPP_PREFIX)\tmp
BIT_CACHE_PREFIX   = $(BIT_VAPP_PREFIX)\cache
BIT_SRC_PREFIX     = $(BIT_VAPP_PREFIX)\src


TARGETS            = $(TARGETS) $(CONFIG)\bin\libsql.dll

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_APP_PREFIX)" == ""
	echo "BIT_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\sqlite-windows-default-bit.h $(CONFIG)\inc\bit.h

clean:
	if exist "$(CONFIG)\bin\libsql.dll" del /Q "$(CONFIG)\bin\libsql.dll"
	if exist "$(CONFIG)\bin\libsql.lib" del /Q "$(CONFIG)\bin\libsql.lib"
	if exist "$(CONFIG)\bin\libsql.pdb" del /Q "$(CONFIG)\bin\libsql.pdb"
	if exist "$(CONFIG)\bin\libsql.exp" del /Q "$(CONFIG)\bin\libsql.exp"
	if exist "$(CONFIG)\obj\sqlite.obj" del /Q "$(CONFIG)\obj\sqlite.obj"
	if exist "$(CONFIG)\obj\sqlite3.obj" del /Q "$(CONFIG)\obj\sqlite3.obj"



#
#   version
#
version: $(DEPS_1)
	echo 1.0.1

#
#   sqlite3.h
#
$(CONFIG)\inc\sqlite3.h: $(DEPS_2)
	@echo '      [Copy] $(CONFIG)/inc/sqlite3.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\sqlite3.h $(CONFIG)\inc\sqlite3.h

#
#   bit.h
#
$(CONFIG)\inc\bit.h: $(DEPS_3)
	@echo '      [Copy] $(CONFIG)/inc/bit.h'

#
#   sqlite.obj
#
DEPS_4 = $(DEPS_4) $(CONFIG)\inc\bit.h
DEPS_4 = $(DEPS_4) $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite.obj: \
    src\sqlite.c $(DEPS_4)
	@echo '   [Compile] $(CONFIG)/obj/sqlite.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite.obj -Fd$(CONFIG)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sqlite.c

#
#   sqlite3.obj
#
DEPS_5 = $(DEPS_5) $(CONFIG)\inc\bit.h
DEPS_5 = $(DEPS_5) $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite3.obj: \
    src\sqlite3.c $(DEPS_5)
	@echo '   [Compile] $(CONFIG)/obj/sqlite3.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite3.obj -Fd$(CONFIG)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sqlite3.c

#
#   libsql
#
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\sqlite3.h
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\bit.h
DEPS_6 = $(DEPS_6) $(CONFIG)\obj\sqlite.obj
DEPS_6 = $(DEPS_6) $(CONFIG)\obj\sqlite3.obj

$(CONFIG)\bin\libsql.dll: $(DEPS_6)
	@echo '      [Link] $(CONFIG)/bin/libsql.dll'
	"$(LD)" -dll -out:$(CONFIG)\bin\libsql.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\sqlite.obj" "$(CONFIG)\obj\sqlite3.obj" $(LIBS) 

#
#   stop
#
stop: $(DEPS_7)
#  Omit build script stop

#
#   installBinary
#
installBinary: $(DEPS_8)
#  Omit build script installBinary

#
#   start
#
start: $(DEPS_9)
#  Omit build script start

#
#   install
#
DEPS_10 = $(DEPS_10) stop
DEPS_10 = $(DEPS_10) installBinary
DEPS_10 = $(DEPS_10) start

install: $(DEPS_10)
#  Omit build script install

#
#   uninstall
#
DEPS_11 = $(DEPS_11) stop

uninstall: $(DEPS_11)
#  Omit build script uninstall

