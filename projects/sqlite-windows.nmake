#
#   sqlite-windows.nmake -- Build It Makefile to build SQLite Library for windows
#

PA        = $(PROCESSOR_ARCHITECTURE)
!IF "$(PA)" == "AMD64"
ARCH     = x64
ENTRY    = _DllMainCRTStartup
!ELSE
ARCH  = x86
ENTRY    = _DllMainCRTStartup@12
!ENDIF

OS       = windows
PROFILE  = debug
CONFIG   = $(OS)-$(ARCH)-$(PROFILE)
CC       = cl
LD       = link
RC       = rc
CFLAGS   = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS   = -D_REENTRANT -D_MT -DBIT_FEATURE_SQLITE=1 -DBIT_DEBUG
IFLAGS   = -I$(CONFIG)\inc
LDFLAGS  = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS = -libpath:$(CONFIG)\bin
LIBS     = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

all: prep \
        $(CONFIG)\bin\libsqlite3.dll

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc\bit.h copy projects\sqlite-$(OS)-bit.h $(CONFIG)\inc\bit.h
	@if not exist $(CONFIG)\bin\libmpr.def xcopy /Y /S projects\sqlite-windows\*.def $(CONFIG)\bin

clean:
	-if exist $(CONFIG)\bin\libsqlite3.dll del /Q $(CONFIG)\bin\libsqlite3.dll
	-if exist $(CONFIG)\obj\sqlite.obj del /Q $(CONFIG)\obj\sqlite.obj
	-if exist $(CONFIG)\obj\sqlite3.obj del /Q $(CONFIG)\obj\sqlite3.obj

$(CONFIG)\inc\sqlite3.h: 
	-if exist $(CONFIG)\inc\sqlite3.h del /Q $(CONFIG)\inc\sqlite3.h
	copy /Y src\sqlite3.h $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite.obj: \
        src\sqlite.c \
        $(CONFIG)\inc\bit.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite.obj -Fd$(CONFIG)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\sqlite.c

$(CONFIG)\obj\sqlite3.obj: \
        src\sqlite3.c \
        $(CONFIG)\inc\bit.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite3.obj -Fd$(CONFIG)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\sqlite3.c

$(CONFIG)\bin\libsqlite3.dll:  \
        $(CONFIG)\inc\sqlite3.h \
        $(CONFIG)\obj\sqlite.obj \
        $(CONFIG)\obj\sqlite3.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libsqlite3.dll -entry:$(ENTRY) -def:$(CONFIG)\bin\libsqlite3.def $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\sqlite.obj $(CONFIG)\obj\sqlite3.obj $(LIBS)

